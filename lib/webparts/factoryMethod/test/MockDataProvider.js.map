{"version":3,"sources":["webparts/factoryMethod/test/MockDataProvider.ts"],"names":[],"mappings":";;AAKA;IAOI;QACI,IAAI,CAAC,MAAM,GAAG;YACV,IAAI,CAAC,mBAAmB,CAAC,GAAG,EAAE,YAAY,CAAC;YAC3C,IAAI,CAAC,mBAAmB,CAAC,GAAG,EAAE,oBAAoB,CAAC;YACnD,IAAI,CAAC,mBAAmB,CAAC,GAAG,EAAE,WAAW,CAAC;YAC1C,IAAI,CAAC,mBAAmB,CAAC,GAAG,EAAE,gBAAgB,CAAC;SAClD,CAAC;IACN,CAAC;IAGD,sBAAW,4CAAc;aAIzB;YACI,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC;QAChC,CAAC;QAPD,sBAAsB;aACtB,UAA0B,KAAsB;YAC5C,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QACjC,CAAC;;;OAAA;IAMD,sBAAW,0CAAY;aAIvB;YACI,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC;QAC9B,CAAC;aAND,UAAwB,KAAW;YAC/B,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC/B,CAAC;;;OAAA;IAMM,mCAAQ,GAAf;QACI,IAAM,SAAS,GAAW,IAAI,CAAC,MAAM,CAAC;QACtC,MAAM,CAAC,IAAI,OAAO,CAAS,UAAC,OAAO;YAC/B,UAAU,CAAC,cAAM,OAAA,OAAO,CAAC,SAAS,CAAC,EAAlB,CAAkB,EAAE,GAAG,CAAC,CAAC;QAC9C,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,8CAAmB,GAA3B,UAA4B,EAAU,EAAE,KAAa;QACjD,IAAM,YAAY,GAAS;YACvB,EAAE,EAAE,EAAE;YACN,KAAK,EAAE,KAAK;SACf,CAAC;QACF,MAAM,CAAC,YAAY,CAAC;IACxB,CAAC;IACL,uBAAC;AAAD,CA/CA,AA+CC,IAAA","file":"webparts/factoryMethod/test/MockDataProvider.js","sourcesContent":["import { IWebPartContext } from \"@microsoft/sp-webpart-base\";\r\nimport * as lodash from \"@microsoft/sp-lodash-subset\";\r\nimport IDataProvider from \"../components/dataproviders/IDataProvider\";\r\nimport List from \"../components/models/List\";\r\n\r\nexport default class MockDataProvider implements IDataProvider {\r\n\r\n    // private fields\r\n    private _lists: List[];\r\n    private _selectedList: List;\r\n    private _webPartContext: IWebPartContext;\r\n\r\n    constructor() {\r\n        this._lists = [\r\n            this._createMockTaskList(\"1\", \"Basic List\"),\r\n            this._createMockTaskList(\"2\", \"Announcements List\"),\r\n            this._createMockTaskList(\"3\", \"News List\"),\r\n            this._createMockTaskList(\"4\", \"Directory List\"),\r\n        ];\r\n    }\r\n\r\n    // getters and Setters\r\n    public set webPartContext(value: IWebPartContext) {\r\n        this._webPartContext = value;\r\n    }\r\n\r\n    public get webPartContext(): IWebPartContext {\r\n        return this._webPartContext;\r\n    }\r\n\r\n    public set selectedList(value: List) {\r\n        this._selectedList = value;\r\n    }\r\n\r\n    public get selectedList(): List {\r\n        return this._selectedList;\r\n    }\r\n\r\n    public getLists(): Promise<List[]> {\r\n        const taskLists: List[] = this._lists;\r\n        return new Promise<List[]>((resolve) => {\r\n            setTimeout(() => resolve(taskLists), 500);\r\n        });\r\n    }\r\n\r\n    private _createMockTaskList(id: string, title: string): List {\r\n        const mockTaskList: List = {\r\n            Id: id,\r\n            Title: title\r\n        };\r\n        return mockTaskList;\r\n    }\r\n}"],"sourceRoot":"..\\..\\..\\..\\src"}