{"version":3,"sources":["webparts/factoryMethod/components/ListItemFactory.ts"],"names":[],"mappings":";;AAAA,8CAAwE;AAQxE;IAAA;IA8EA,CAAC;IA5EU,kCAAQ,GAAf,UAAgB,SAAuB,EAAE,OAAe,EAAE,QAAgB;QAA1E,iBA2EG;QA1EC,MAAM,CAAA,CAAC,QAAQ,CAAC,CAAC,CAAC;YACd,KAAK,aAAa;gBACd,IAAI,KAAK,SAAa,CAAC;gBACvB,2CAA2C;gBAC3C,SAAS,CAAC,GAAG,CAAI,OAAO,oCAA+B,QAAQ,sEAAmE,EAClI,sBAAY,CAAC,cAAc,CAAC,EAAE,EAC9B;oBACI,OAAO,EAAE;wBACL,QAAQ,EAAE,mCAAmC;wBAC7C,eAAe,EAAE,EAAE;qBACtB;iBACJ,CAAC;qBACD,IAAI,CAAC,UAAC,QAA8B;oBACjC,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;gBAC3B,CAAC,CAAC;qBACD,IAAI,CAAC,UAAC,IAA4B;oBAC/B,MAAM,CAAC,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC;gBACtC,CAAC,CAAC,CAAC;gBACL,KAAK,CAAC;YACV,KAAK,MAAM;gBACP,IAAI,SAAS,SAAiB,CAAC;gBAC/B,2CAA2C;gBAC3C,SAAS,CAAC,GAAG,CAAI,OAAO,oCAA+B,QAAQ,qGAAkG,EACjK,sBAAY,CAAC,cAAc,CAAC,EAAE,EAC9B;oBACI,OAAO,EAAE;wBACL,QAAQ,EAAE,mCAAmC;wBAC7C,eAAe,EAAE,EAAE;qBACtB;iBACJ,CAAC;qBACD,IAAI,CAAC,UAAC,QAA8B;oBACjC,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;gBAC3B,CAAC,CAAC;qBACD,IAAI,CAAC,UAAC,IAAgC;oBACnC,MAAM,CAAC,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC;gBACxC,CAAC,CAAC,CAAC;gBACH,KAAK,CAAC;YACV,KAAK,eAAe;gBAChB,IAAI,iBAAiB,SAAyB,CAAC;gBAC/C,SAAS,CAAC,GAAG,CAAI,OAAO,oCAA+B,QAAQ,8BAA2B,EAC1F,sBAAY,CAAC,cAAc,CAAC,EAAE,EAC9B;oBACI,OAAO,EAAE;wBACL,QAAQ,EAAE,mCAAmC;wBAC7C,eAAe,EAAE,EAAE;qBACtB;iBACJ,CAAC;qBACD,IAAI,CAAC,UAAC,QAA8B;oBACjC,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;gBAC3B,CAAC,CAAC;qBACD,IAAI,CAAC,UAAC,IAAwC;oBAC3C,MAAM,CAAC,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC;gBACxC,CAAC,CAAC,CAAC;gBACH,KAAK,CAAC;YACV,KAAK,WAAW;gBACZ,IAAI,cAAc,SAAsB,CAAC;gBACzC,SAAS,CAAC,GAAG,CAAI,OAAO,oCAA+B,QAAQ,8BAA2B,EAC1F,sBAAY,CAAC,cAAc,CAAC,EAAE,EAC9B;oBACI,OAAO,EAAE;wBACL,QAAQ,EAAE,mCAAmC;wBAC7C,eAAe,EAAE,EAAE;qBACtB;iBACJ,CAAC;qBACD,IAAI,CAAC,UAAC,QAA8B;oBACjC,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;gBAC3B,CAAC,CAAC;qBACD,IAAI,CAAC,UAAC,IAAqC;oBACxC,MAAM,CAAC,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC;gBACxC,CAAC,CAAC,CAAC;gBACH,KAAK,CAAC;YACV;gBACI,MAAM,CAAC,IAAI,CAAC;QACpB,CAAC;IACH,CAAC;IACP,sBAAC;AAAD,CA9EA,AA8EC,IAAA;AA9EY,0CAAe","file":"webparts/factoryMethod/components/ListItemFactory.js","sourcesContent":["import { SPHttpClient, SPHttpClientResponse } from \"@microsoft/sp-http\";\r\nimport { IWebPartContext } from \"@microsoft/sp-webpart-base\";\r\nimport { IListItem} from \"./models/IListItem\";\r\nimport { IFactory } from \"./IFactory\";\r\nimport { INewsListItem } from \"./models/INewsListItem\";\r\nimport { IDirectoryListItem } from \"./models/IDirectoryListItem\";\r\nimport { IAnnouncementListItem } from \"./models/IAnnouncementListItem\";\r\n\r\nexport class ListItemFactory implements IFactory {\r\n    private _listItems: IListItem[];\r\n    public getItems(requester: SPHttpClient, siteUrl: string, listName: string): Promise<IListItem[]> {\r\n        switch(listName) {\r\n            case \"GenericList\":\r\n                let items: IListItem[];\r\n                // tslint:disable-next-line:max-line-length\r\n                requester.get(`${siteUrl}/_api/web/lists/getbytitle('${listName}')/items?$select=Title,Id,Modified,Created,Created By,Modified By`,\r\n                SPHttpClient.configurations.v1,\r\n                {\r\n                    headers: {\r\n                        \"Accept\": \"application/json;odata=nometadata\",\r\n                        \"odata-version\": \"\"\r\n                    }\r\n                })\r\n                .then((response: SPHttpClientResponse): Promise<{ value: IListItem[] }> => {\r\n                    return response.json();\r\n                })\r\n                .then((json: { value: IListItem[] }) => {\r\n                    return this._listItems = json.value;\r\n                  });\r\n                break;    \r\n            case \"News\":\r\n                let newsitems: INewsListItem[];\r\n                // tslint:disable-next-line:max-line-length\r\n                requester.get(`${siteUrl}/_api/web/lists/getbytitle('${listName}')/items?$select=Title,Id,Modified,Created,Created By,Modified By,newsheader,newsbody,expiryDate`,\r\n                SPHttpClient.configurations.v1,\r\n                {\r\n                    headers: {\r\n                        \"Accept\": \"application/json;odata=nometadata\",\r\n                        \"odata-version\": \"\"\r\n                    }\r\n                })\r\n                .then((response: SPHttpClientResponse): Promise<{ value: INewsListItem[] }> => {\r\n                    return response.json();\r\n                })\r\n                .then((json: { value: INewsListItem[] }) => {\r\n                    return this._listItems = json.value;\r\n                });\r\n                break;    \r\n            case \"Announcements\":\r\n                let announcementitems: IAnnouncementListItem[];\r\n                requester.get(`${siteUrl}/_api/web/lists/getbytitle('${listName}')/items?$select=Title,Id`,\r\n                SPHttpClient.configurations.v1,\r\n                {\r\n                    headers: {\r\n                        \"Accept\": \"application/json;odata=nometadata\",\r\n                        \"odata-version\": \"\"\r\n                    }\r\n                })\r\n                .then((response: SPHttpClientResponse): Promise<{ value: IAnnouncementListItem[] }> => {\r\n                    return response.json();\r\n                })\r\n                .then((json: { value: IAnnouncementListItem[] }) => {\r\n                    return this._listItems = json.value;\r\n                });\r\n                break;    \r\n            case \"Directory\":\r\n                let directoryitems: IDirectoryListItem[];\r\n                requester.get(`${siteUrl}/_api/web/lists/getbytitle('${listName}')/items?$select=Title,Id`,\r\n                SPHttpClient.configurations.v1,\r\n                {\r\n                    headers: {\r\n                        \"Accept\": \"application/json;odata=nometadata\",\r\n                        \"odata-version\": \"\"\r\n                    }\r\n                })\r\n                .then((response: SPHttpClientResponse): Promise<{ value: IDirectoryListItem[] }> => {\r\n                    return response.json();\r\n                })\r\n                .then((json: { value: IDirectoryListItem[] }) => {\r\n                    return this._listItems = json.value;\r\n                });\r\n                break;    \r\n            default:\r\n                return null;\r\n        }\r\n      }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\..\\src"}