{"version":3,"sources":["webparts/factoryMethod/components/ListItemFactory.ts"],"names":[],"mappings":"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","file":"webparts/factoryMethod/components/ListItemFactory.js","sourcesContent":["import { SPHttpClient, SPHttpClientResponse } from \"@microsoft/sp-http\";\r\nimport { IWebPartContext } from \"@microsoft/sp-webpart-base\";\r\nimport { IListItem} from \"./models/IListItem\";\r\nimport { IFactory } from \"./IFactory\";\r\nimport { INewsListItem } from \"./models/INewsListItem\";\r\nimport { IDirectoryListItem } from \"./models/IDirectoryListItem\";\r\nimport { IAnnouncementListItem } from \"./models/IAnnouncementListItem\";\r\n\r\nexport class ListItemFactory implements IFactory {\r\n    // private _listItems: IListItem[];\r\n    public getItems(requester: SPHttpClient, siteUrl: string, listName: string): Promise<any[]> {\r\n        switch(listName) {\r\n            case \"GenericList\":\r\n                let items: IListItem[];\r\n                // tslint:disable-next-line:max-line-length\r\n                return requester.get(`${siteUrl}/_api/web/lists/getbytitle('${listName}')/items?$select=Title,Id,Modified,Created,Author/Title,Editor/Title&$expand=Author,Editor`,\r\n                SPHttpClient.configurations.v1,\r\n                {\r\n                    headers: {\r\n                        \"Accept\": \"application/json;odata=nometadata\",\r\n                        \"odata-version\": \"\"\r\n                    }\r\n                })\r\n                .then((response: SPHttpClientResponse): Promise<{ value: IListItem[] }> => {\r\n                    return response.json();\r\n                })\r\n                .then((json: { value: IListItem[] }) => {\r\n                    console.log(JSON.stringify(json.value));\r\n                    return items=json.value.map((v,i)=>(\r\n                        {\r\n                            // key: v.id,\r\n                            id: v.Id,\r\n                            title: v.Title,\r\n                            created: v.Created,\r\n                            createdby: v.Author.Title,\r\n                            modified: v.Modified,\r\n                            modifiedby: v.Editor.Title\r\n                        }\r\n                    ));\r\n                });\r\n            case \"News\":\r\n                let newsitems: INewsListItem[];\r\n                // tslint:disable-next-line:max-line-length\r\n                return requester.get(`${siteUrl}/_api/web/lists/getbytitle('${listName}')/items?$select=Title,Id,Modified,Created,Created By,Modified By,newsheader,newsbody,expiryDate`,\r\n                SPHttpClient.configurations.v1,\r\n                {\r\n                    headers: {\r\n                        \"Accept\": \"application/json;odata=nometadata\",\r\n                        \"odata-version\": \"\"\r\n                    }\r\n                })\r\n                .then((response: SPHttpClientResponse): Promise<{ value: INewsListItem[] }> => {\r\n                    return response.json();\r\n                })\r\n                .then((json: { value: INewsListItem[] }) => {\r\n                    return newsitems=json.value.map((v,i)=>(\r\n                        { \r\n                            id: v.Id,\r\n                            title: v.Title,\r\n                            created: v.Created,\r\n                            createdby: v.Author.Title,\r\n                            modified: v.Modified,\r\n                            modifiedby: v.Editor.Title,\r\n                            newsheader: v.newsheader,\r\n                            newsbody: v.newsbody,\r\n                            expiryDate: v.expiryDate\r\n                        }\r\n                    ));\r\n                });\r\n            case \"Announcements\":\r\n                let announcementitems: IAnnouncementListItem[];\r\n                return requester.get(`${siteUrl}/_api/web/lists/getbytitle('${listName}')/items?$select=Title,Id`,\r\n                SPHttpClient.configurations.v1,\r\n                {\r\n                    headers: {\r\n                        \"Accept\": \"application/json;odata=nometadata\",\r\n                        \"odata-version\": \"\"\r\n                    }\r\n                })\r\n                .then((response: SPHttpClientResponse): Promise<{ value: IAnnouncementListItem[] }> => {\r\n                    return response.json();\r\n                })\r\n                .then((json: { value: IAnnouncementListItem[] }) => {\r\n                    return announcementitems=json.value.map((v,i)=>(\r\n                        { \r\n                            id: v.Id,\r\n                            title: v.Title,\r\n                            created: v.Created,\r\n                            createdby: v.Author.Title,\r\n                            modified: v.Modified,\r\n                            modifiedby: v.Editor.Title,\r\n                            announcementBody: v.announcementBody,\r\n                            expiryDate: v.expiryDate\r\n                        }\r\n                    ));\r\n                });\r\n            case \"Directory\":\r\n                let directoryitems: IDirectoryListItem[];\r\n                return requester.get(`${siteUrl}/_api/web/lists/getbytitle('${listName}')/items?$select=Title,Id`,\r\n                SPHttpClient.configurations.v1,\r\n                {\r\n                    headers: {\r\n                        \"Accept\": \"application/json;odata=nometadata\",\r\n                        \"odata-version\": \"\"\r\n                    }\r\n                })\r\n                .then((response: SPHttpClientResponse): Promise<{ value: IDirectoryListItem[] }> => {\r\n                    return response.json();\r\n                })\r\n                .then((json: { value: IDirectoryListItem[] }) => {\r\n                    return directoryitems=json.value.map((v,i)=>(\r\n                        {\r\n                            id: v.Id,\r\n                            title: v.Title,\r\n                            created: v.Created,\r\n                            createdby: v.Author.Title,\r\n                            modified: v.Modified,\r\n                            modifiedby: v.Editor.Title,\r\n                            firstName: v.firstName,\r\n                            lastName: v.lastName,\r\n                            mobileNumber: v.mobileNumber,\r\n                            internalNumber: v.internalNumber\r\n                        }\r\n                    ));\r\n                });\r\n            default:\r\n                break;\r\n            }\r\n      }\r\n}"],"sourceRoot":"..\\..\\..\\..\\src"}