{"version":3,"sources":["webparts/factoryMethod/components/FactoryMethod.tsx"],"names":[],"mappings":"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","file":"webparts/factoryMethod/components/FactoryMethod.js","sourcesContent":["//#region Imports\r\nimport * as React from \"react\";\r\nimport styles from \"./FactoryMethod.module.scss\";\r\nimport  { IFactoryMethodProps } from \"./IFactoryMethodProps\";\r\nimport {\r\n  IDetailsListItemState,\r\n  IDetailsNewsListItemState,\r\n  IDetailsDirectoryListItemState,\r\n  IDetailsAnnouncementListItemState,\r\n  IFactoryMethodState\r\n} from \"./IFactoryMethodState\";\r\nimport { IListItem } from \"./models/IListItem\";\r\nimport { IAnnouncementListItem } from \"./models/IAnnouncementListItem\";\r\nimport { INewsListItem } from \"./models/INewsListItem\";\r\nimport { IDirectoryListItem } from \"./models/IDirectoryListItem\";\r\nimport { escape } from \"@microsoft/sp-lodash-subset\";\r\nimport { SPHttpClient, SPHttpClientResponse } from \"@microsoft/sp-http\";\r\nimport { ListItemFactory} from \"./ListItemFactory\";\r\nimport { TextField } from \"office-ui-fabric-react/lib/TextField\";\r\nimport {\r\n  DetailsList,\r\n  DetailsListLayoutMode,\r\n  Selection,\r\n  buildColumns,\r\n  IColumn\r\n} from \"office-ui-fabric-react/lib/DetailsList\";\r\nimport { MarqueeSelection } from \"office-ui-fabric-react/lib/MarqueeSelection\";\r\nimport { autobind } from \"office-ui-fabric-react/lib/Utilities\";\r\nimport PropTypes from \"prop-types\";\r\n//#endregion\r\n\r\n\r\nexport default class FactoryMethod extends React.Component<IFactoryMethodProps, IFactoryMethodState> {\r\n  constructor(props: IFactoryMethodProps, state: any) {\r\n    super(props);\r\n    this.setInitialState();\r\n  }\r\n\r\n  // lifecycle help here: https://staminaloops.github.io/undefinedisnotafunction/understanding-react/\r\n\r\n  //#region Mouting events lifecycle\r\n\r\n  // the data returned from render is neither a string nor a DOM node.\r\n  // it's a lightweight description of what the DOM should look like.\r\n  // inspects this.state and this.props and create the markup.\r\n  // when your data changes, the render method is called again.\r\n  // react diff the return value from the previous call to render with\r\n  // the new one, and generate a minimal set of changes to be applied to the DOM.\r\n  public render(): React.ReactElement<IFactoryMethodProps> {\r\n    switch(this.props.listName) {\r\n        case \"GenericList\":\r\n          // tslint:disable-next-line:max-line-length\r\n          return <this.ListMarqueeSelection items={this.state.DetailsListItemState.items} columns={this.state.columns} />;\r\n        case \"News\":\r\n          // tslint:disable-next-line:max-line-length\r\n          return <this.ListMarqueeSelection items={this.state.DetailsNewsListItemState.items} columns={this.state.columns}/>;\r\n        case \"Announcements\":\r\n          // tslint:disable-next-line:max-line-length\r\n          return <this.ListMarqueeSelection items={this.state.DetailsAnnouncementListItemState.items} columns={this.state.columns}/>;\r\n        case \"Directory\":\r\n          // tslint:disable-next-line:max-line-length\r\n          return <this.ListMarqueeSelection items={this.state.DetailsDirectoryListItemState.items} columns={this.state.columns}/>;\r\n        default:\r\n          return null;\r\n    }\r\n  }\r\n\r\n   // invoked once, only on the client (not on the server), immediately AFTER the initial rendering occurs.\r\n   public componentDidMount(): void {\r\n    // you can access any refs to your children\r\n    // (e.g., to access the underlying DOM representation - ReactDOM.findDOMNode).\r\n    // the componentDidMount() method of child components is invoked before that of parent components.\r\n    // if you want to integrate with other JavaScript frameworks,\r\n    // set timers using setTimeout or setInterval,\r\n    // or send AJAX requests, perform those operations in this method.\r\n    this._configureWebPart = this._configureWebPart.bind(this);\r\n    this.readItemsAndSetStatus(\"\");\r\n  }\r\n\r\n  //#endregion\r\n\r\n  //#region Props changes lifecycle events (after a property changes from parent component)\r\n  public componentWillReceiveProps(nextProps: IFactoryMethodProps): void {\r\n    if(nextProps.listName !== this.props.listName) {\r\n      this.readItemsAndSetStatus(nextProps.listName);\r\n    }\r\n  }\r\n\r\n  //#endregion\r\n\r\n  //#region private methods\r\n  private _configureWebPart(): void {\r\n    this.props.configureStartCallback();\r\n  }\r\n\r\n  public setInitialState(): void {\r\n    this.state = {\r\n      type: \"ListItem\",\r\n      status: this.listNotConfigured(this.props)\r\n        ? \"Please configure list in Web Part properties\"\r\n        : \"Ready\",\r\n      columns:[],\r\n      DetailsListItemState:{\r\n        items:[]\r\n      },\r\n      DetailsNewsListItemState:{\r\n        items:[]\r\n      },\r\n      DetailsDirectoryListItemState:{\r\n        items:[]\r\n      },\r\n      DetailsAnnouncementListItemState:{\r\n        items:[]\r\n      },\r\n    };\r\n  }\r\n\r\n  // reusable inline component\r\n  private ListMarqueeSelection = (itemState: {columns: IColumn[], items: IListItem[] }) => (\r\n      <div>\r\n          <DetailsList\r\n            items={ itemState.items }\r\n            columns={ itemState.columns }\r\n            setKey=\"set\"\r\n            layoutMode={ DetailsListLayoutMode.fixedColumns }\r\n            selectionPreservedOnEmptyClick={ true }\r\n            compact={ true }>\r\n          </DetailsList>\r\n      </div>\r\n  )\r\n\r\n  // read items using factory method pattern and sets state accordingly\r\n  private readItemsAndSetStatus(nextListName: string): void {\r\n    this.setState({\r\n      status: \"Loading all items...\"\r\n    });\r\n\r\n    const factory: ListItemFactory = new ListItemFactory();\r\n    factory.getItems(this.props.spHttpClient, this.props.siteUrl, nextListName)\r\n    .then((items: any[]) => {\r\n      const keyPart: string = this.props.listName === \"GenericList\" ? \"\" : nextListName;\r\n        // the explicit specification of the type argument `keyof {}` is bad and\r\n        // it should not be required.\r\n        this.setState<keyof {}>({\r\n          status: `Successfully loaded ${items.length} items`,\r\n          [\"Details\" + keyPart + \"ListItemState\"] : {\r\n            items\r\n          },\r\n          columns: buildColumns(items)\r\n        });\r\n    });\r\n  }\r\n\r\n  private listNotConfigured(props: IFactoryMethodProps): boolean {\r\n    return props.listName === undefined ||\r\n      props.listName === null ||\r\n      props.listName.length === 0;\r\n  }\r\n\r\n  //#endregion\r\n}\r\n"],"sourceRoot":"..\\..\\..\\..\\src"}